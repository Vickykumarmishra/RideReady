{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VICKY MISHRA\\\\Desktop\\\\RideReady\\\\perfect\\\\client\\\\src\\\\components\\\\Showimage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Showimage() {\n  _s();\n  const [image, setImage] = useState(null);\n  const submitImage = async e => {\n    e.preventDefault();\n    var x = document.getElementById(\"inputGroupFile04\").value;\n\n    /*const formData = new FormData();: Here, a new instance of the FormData object is created.FormData is a built-in\r\n    JavaScript object that is used to construct a set of key/value pairs representing form fields and their values, which can then be sent to the server.\r\n    formData.append(\"image\", image);: This line appends data to the formData object. It adds a field named \"image\" and associates it with the image variable. \r\n    image presumably contains the file that you want to upload. */\n\n    if (x == '') {\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Upload the image of your bike'\n      });\n    } else {\n      const formData = new FormData();\n      formData.append(\"image\", image);\n      const result = await axios.post(\"http://localhost:8000/upload-image\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      Swal.fire('saved', 'image successfully saved to database!', 'success');\n    }\n  };\n  const onInputChange = e => {\n    //koi v naya file upload karenge ,to vo ek input chnage event hoga and that will trigger this function.\n    //console.log(e.target.files[0]);\n    setImage(e.target.files[0]);\n    /*We'll also need to define a JavaScript function that gets triggered when a file is selected.\r\n    This function typically uses the onChange event handler on the file input element.\r\n    Inside this function, you can access the selected file using e.target.files[0],where e is the event object. */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitImage,\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        style: {\n          marginBottom: '0.5rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: onInputChange,\n          className: \"form-control\",\n          id: \"inputGroupFile04\",\n          \"aria-describedby\": \"inputGroupFileAddon04\",\n          \"aria-label\": \"Upload\",\n          name: \"photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          class: \"btn btn-outline-secondary\",\n          style: {\n            backgroundColor: \"orange\",\n            color: \"white\"\n          },\n          type: \"submit\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 115\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(Showimage, \"YuvfiiN/wj6DHRmxyme10brMltk=\");\n_c = Showimage;\nvar _c;\n$RefreshReg$(_c, \"Showimage\");","map":{"version":3,"names":["React","useEffect","useState","axios","Swal","jsxDEV","_jsxDEV","Showimage","_s","image","setImage","submitImage","e","preventDefault","x","document","getElementById","value","fire","icon","title","text","formData","FormData","append","result","post","headers","onInputChange","target","files","className","children","onSubmit","style","marginBottom","type","accept","onChange","id","name","fileName","_jsxFileName","lineNumber","columnNumber","class","backgroundColor","color","_c","$RefreshReg$"],"sources":["C:/Users/VICKY MISHRA/Desktop/RideReady/perfect/client/src/components/Showimage.js"],"sourcesContent":["import React from 'react'\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Swal from 'sweetalert2';\r\nexport default function Showimage() {\r\n\r\n    const [image,setImage]=useState(null)  \r\n  \r\n  \r\n    const submitImage = async (e) => {\r\n      e.preventDefault();\r\n   var x= document.getElementById(\"inputGroupFile04\").value;\r\n\r\n      /*const formData = new FormData();: Here, a new instance of the FormData object is created.FormData is a built-in\r\n  JavaScript object that is used to construct a set of key/value pairs representing form fields and their values, which can then be sent to the server.\r\n  formData.append(\"image\", image);: This line appends data to the formData object. It adds a field named \"image\" and associates it with the image variable. \r\n  image presumably contains the file that you want to upload. */\r\n\r\n  if(x==''){\r\n\r\n    Swal.fire({\r\n      icon: 'error',\r\n      title: 'Oops...',\r\n      text: 'Upload the image of your bike',\r\n      \r\n    })\r\n\r\n  }\r\n\r\nelse{  \r\n      const formData = new FormData();\r\n      formData.append(\"image\", image);\r\n  \r\n      const result = await axios.post(\r\n        \"http://localhost:8000/upload-image\",\r\n\r\n        \r\n      \r\n        formData,\r\n        {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        }\r\n      );\r\n    \r\n      Swal.fire(\r\n        'saved',\r\n        'image successfully saved to database!',\r\n        'success'\r\n      )}\r\n    };\r\n    const onInputChange = (e) => {\r\n      //koi v naya file upload karenge ,to vo ek input chnage event hoga and that will trigger this function.\r\n      //console.log(e.target.files[0]);\r\n      setImage(e.target.files[0]);\r\n    /*We'll also need to define a JavaScript function that gets triggered when a file is selected.\r\n    This function typically uses the onChange event handler on the file input element.\r\n    Inside this function, you can access the selected file using e.target.files[0],where e is the event object. */\r\n    };\r\n    \r\n   \r\n  \r\n\r\n  return (\r\n    <div className='container text-center'>\r\n\r\n\r\n\r\n\r\n<form onSubmit={submitImage} className='container'>\r\n<div className=\"input-group\" style={{marginBottom:'0.5rem'}}>\r\n        <input type=\"file\" accept=\"image/*\" onChange={onInputChange} className=\"form-control\" id=\"inputGroupFile04\" aria-describedby=\"inputGroupFileAddon04\" aria-label=\"Upload\" name=\"photo\"></input>\r\n         {/*accept=\"image/*\" indicates that the input should accept all types of image files. */}\r\n        <button class=\"btn btn-outline-secondary\"  style={{backgroundColor:\"orange\",color:\"white\"}} type=\"submit\"><b>upload</b></button>  </div>\r\n      </form>\r\n    \r\n\r\n\r\n      \r\n     \r\n   \r\n    </div>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}